name: Build Workflow

on:
  push:
    branches: [ "main" ]
    paths:
      - 'aa_wireless_dongle/**'
      - '.github/workflows/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Select what to build'
        required: true
        type: choice
        options:
        - base
        - python
        - full
        - all
        default: 'base'
      board:
        description: 'Select board (only for base/full builds)'
        required: false
        type: choice
        options:
        - raspberrypizero2w
        - raspberrypi0w
        - raspberrypi4
        - raspberrypi3a
        default: 'raspberrypizero2w'

jobs:
  build-base:
    if: |
      (github.event_name != 'workflow_dispatch' && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.build_type == 'base' || github.event.inputs.build_type == 'all'))
    strategy:
      matrix:
        defconfig:
          - ${{ github.event.inputs.board || 'raspberrypizero2w' }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Setup base config
      run: |
        make BR2_EXTERNAL=../aa_wireless_dongle/ ${{ matrix.defconfig }}_defconfig
        echo '# BR2_PACKAGE_AAWG is not set' >> .config
      working-directory: ./buildroot

    - name: Build base system
      run: make
      working-directory: ./buildroot

    - name: Compress base image
      run: xz -c sdcard.img > base-${{ matrix.defconfig }}-sdcard.img.xz
      working-directory: ./buildroot/output/images

    - uses: actions/upload-artifact@v4
      with:
        name: base-${{ matrix.defconfig }}
        path: ./buildroot/output/images/base-${{ matrix.defconfig }}-sdcard.img.xz

  build-python:
    if: |
      (github.event_name != 'workflow_dispatch' && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.build_type == 'python' || github.event.inputs.build_type == 'all'))
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        python3 -m pip install --user build

    - name: Build Python package
      run: |
        cd aa_wireless_dongle/package/aawg/src
        protoc --python_out=. --proto_path=proto proto/*.proto
        python3 -m build --wheel --outdir ./dist/

    - uses: actions/upload-artifact@v4
      with:
        name: python-package
        path: aa_wireless_dongle/package/aawg/src/dist/*.whl

  build-full:
    if: |
      (github.event_name != 'workflow_dispatch' && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.build_type == 'full' || github.event.inputs.build_type == 'all'))
    strategy:
      matrix:
        defconfig:
          - ${{ github.event.inputs.board || 'raspberrypizero2w' }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Setup config
      run: make BR2_EXTERNAL=../aa_wireless_dongle/ ${{ matrix.defconfig }}_defconfig
      working-directory: ./buildroot

    - name: Build full image
      run: make
      working-directory: ./buildroot

    - name: Compress full image
      run: xz -c sdcard.img > full-${{ matrix.defconfig }}-sdcard.img.xz
      working-directory: ./buildroot/output/images

    - uses: actions/upload-artifact@v4
      with:
        name: full-${{ matrix.defconfig }}
        path: ./buildroot/output/images/full-${{ matrix.defconfig }}-sdcard.img.xz

  merge-artifacts:
    if: |
      success() && (
        github.event_name != 'workflow_dispatch' ||
        github.event.inputs.build_type == 'all'
      )
    needs: [build-base, build-python, build-full]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: WirelessAndroidAutoDongle-all
          pattern: "{base,full}-*-sdcard.img.xz,*.whl"
